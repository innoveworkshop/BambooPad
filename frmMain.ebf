VERSION 5.00
Object = "{A32A88B3-817C-11D1-A762-00AA0044064C}#1.0#0"; "mscecomdlg.dll"
Object = "{BE67ABF5-0137-11D2-9B8A-00C04FAD5AEC}#1.0#0"; "mscecommandbar.dll"
Object = "{25C953A7-5464-11D1-A714-00AA0044064C}#1.0#0"; "MSCEFile.dll"
Begin VB.Form frmMain 
   BorderStyle     =   0  'None
   Caption         =   "BambooPad"
   ClientHeight    =   2490
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   4980
   ScaleHeight     =   2490
   ScaleWidth      =   4980
   ShowInTaskbar   =   0   'False
   WindowState     =   2  'Maximized
   Begin CEComDlgCtl.CommonDialog dlgFont 
      Left            =   4320
      Top             =   1440
      _cx             =   847
      _cy             =   847
      CancelError     =   0   'False
      Color           =   0
      DefaultExt      =   ""
      DialogTitle     =   ""
      FileName        =   ""
      Filter          =   ""
      FilterIndex     =   0
      Flags           =   0
      HelpCommand     =   0
      HelpContext     =   ""
      HelpFile        =   ""
      InitDir         =   ""
      MaxFileSize     =   256
      FontBold        =   0   'False
      FontItalic      =   0   'False
      FontName        =   ""
      FontSize        =   10
      FontUnderline   =   0   'False
      Max             =   0
      Min             =   0
      FontStrikethru  =   0   'False
   End
   Begin FILECTLCtl.File hndFile 
      Left            =   3720
      Top             =   360
      _cx             =   1000
      _cy             =   1000
   End
   Begin CommandbarLib.CommandBar cbrMain 
      Height          =   345
      Left            =   0
      TabIndex        =   0
      Top             =   0
      Width           =   3015
      _cx             =   5318
      _cy             =   600
      Enabled         =   -1  'True
      OKButton        =   0   'False
      HelpButton      =   0   'False
      CloseButton     =   -1  'True
   End
   Begin CEComDlgCtl.CommonDialog dlgFile 
      Left            =   3600
      Top             =   1440
      _cx             =   847
      _cy             =   847
      CancelError     =   -1  'True
      Color           =   0
      DefaultExt      =   "txt"
      DialogTitle     =   "Save"
      FileName        =   ""
      Filter          =   "Plain Text (*.txt)|*.txt|All Files (*.*)|*.*"
      FilterIndex     =   0
      Flags           =   0
      HelpCommand     =   0
      HelpContext     =   ""
      HelpFile        =   ""
      InitDir         =   ""
      MaxFileSize     =   256
      FontBold        =   0   'False
      FontItalic      =   0   'False
      FontName        =   ""
      FontSize        =   10
      FontUnderline   =   0   'False
      Max             =   0
      Min             =   0
      FontStrikethru  =   0   'False
   End
   Begin VBCE.TextBox txtMain 
      Height          =   1095
      Left            =   480
      TabIndex        =   1
      Top             =   720
      Width           =   2175
      _cx             =   3836
      _cy             =   1931
      Appearance      =   1
      BackColor       =   -2147483643
      BorderStyle     =   1
      Enabled         =   -1  'True
      BeginProperty Font {0BE35203-8F91-11CE-9DE3-00AA004BB851} 
         Name            =   "Tahoma"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   -2147483640
      Text            =   ""
      Alignment       =   0
      HideSelection   =   -1  'True
      Locked          =   0   'False
      MaxLength       =   0
      MultiLine       =   -1  'True
      PasswordChar    =   ""
      ScrollBars      =   2
   End
End
Attribute VB_Name = "frmMain"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
' BambooPad
' A simple notepad replacement for Windows CE.
'
' Author: Nathan Campos <nathan@innoveworkshop.com>
Option Explicit

' General variables.
Public bTextDirty As Boolean
Public bLineEndingLF As Boolean
Public sCurrentFilename As String

'*
'* Control Management
'*

' Resizes all the controls together with the window.
Private Sub ResizeControls()
    ' Resize the command bar.
    cbrMain.Width = Me.Width
    
    ' Setup and resize the text box.
    txtMain.Top = cbrMain.Top + cbrMain.Height
    txtMain.Left = 0
    txtMain.Width = Me.Width
    txtMain.Height = Me.Height - cbrMain.Height
End Sub

' Initializes the command bar and adds all of its controls.
Private Sub InitializeCommandBar()
    Dim mnuMain As CommandbarLib.CommandBarMenuBar
    Dim mnuFile As CommandbarLib.Item
    Dim mnuEdit As CommandbarLib.Item
    Dim mnuFind As CommandbarLib.Item
    Dim mnuFormat As CommandbarLib.Item
    Dim mnuHelp As CommandbarLib.Item
    
    ' Initialize the menu bar.
    Set mnuMain = cbrMain.Controls.Add(cbrMenuBar, "MainMenu")
    
    ' Populate the File menu.
    Set mnuFile = mnuMain.Items.Add(1, "mnuFile", "&File")
    mnuFile.SubItems.Add , "New", "&New"
    mnuFile.SubItems.Add , "Open", "&Open..."
    mnuFile.SubItems.Add , "Save", "&Save"
    mnuFile.SubItems.Add , "SaveAs", "Save &As..."
    mnuFile.SubItems.Add , "", "", cbrMenuSeparator
    mnuFile.SubItems.Add , "Exit", "E&xit"
    
    ' Populate the Edit menu.
    Set mnuEdit = mnuMain.Items.Add(2, "mnuEdit", "&Edit")
    mnuEdit.SubItems.Add , "Undo", "&Undo"
    mnuEdit.SubItems.Add , "Redo", "&Redo"
    mnuEdit.SubItems.Add , "", "", cbrMenuSeparator
    mnuEdit.SubItems.Add , "Cut", "Cu&t"
    mnuEdit.SubItems.Add , "Copy", "&Copy"
    mnuEdit.SubItems.Add , "Paste", "&Paste"
    mnuEdit.SubItems.Add , "", "", cbrMenuSeparator
    mnuEdit.SubItems.Add , "SelectAll", "Select &All"
    
    ' Populate the Find menu.
    Set mnuFind = mnuMain.Items.Add(3, "mnuFind", "&Find")
    mnuFind.SubItems.Add , "Find", "F&ind..."
    mnuFind.SubItems.Add , "FindNext", "Find &Next"
    mnuFind.SubItems.Add , "Replace", "&Replace..."
    mnuFind.SubItems.Add , "", "", cbrMenuSeparator
    mnuFind.SubItems.Add , "GoTo", "&Go To..."
    
    ' Populate the Format menu.
    Set mnuFormat = mnuMain.Items.Add(4, "mnuFormat", "For&mat")
    mnuFormat.SubItems.Add , "WordWrap", "&Word Wrap"
    mnuFormat.SubItems.Add , "Font", "&Font..."
    mnuFormat.SubItems.Add , "", "", cbrMenuSeparator
    mnuFormat.SubItems.Add , "AutoIndent", "&Auto Indent"
    
    ' Populate the Help menu.
    Set mnuHelp = mnuMain.Items.Add(5, "mnuHelp", "&Help")
    mnuHelp.SubItems.Add , "About", "&About"
End Sub

'*
'* Auxiliary Methods
'*

' Checks if the text field can have its contents changed.
Public Function CheckForTextDirty() As Boolean
    If bTextDirty Then
        Dim msgReturn As VbMsgBoxResult
        msgReturn = MsgBox("You have unsaved changes. Do you wish to continue?", vbYesNo + vbExclamation, "Unsaved Changes")
        
        If msgReturn = vbNo Then
            CheckForTextDirty = False
            Exit Function
        End If
    End If
    
    CheckForTextDirty = True
End Function

' Sets the text field content and resets the dirtiness flag.
Public Sub SetTextField(sContent As String)
    txtMain.Text = sContent
    bTextDirty = False
End Sub

'*
'* CommandBar/Button Action Handlers
'*

' Clears out the text field and prepares for a new file.
Public Sub NewFileCommand()
    ' Check if we can overwrite the text field.
    If CheckForTextDirty Then
        SetTextField ""
    End If
End Sub

' Saves the text field content to a file.
Public Sub SaveFileCommand(bForceDialogShow As Boolean)
    Dim fFileFlags As FileOpenConstants
    
    ' Check if we should show the save dialog.
    If (sCurrentFilename = "") Or bForceDialogShow Then
        ' Setup and open a save dialog.
        fFileFlags = cdlOFNCreatePrompt + cdlOFNOverwritePrompt
        dlgFile.Flags = fFileFlags
        dlgFile.FileName = sCurrentFilename
        On Error Resume Next
        dlgFile.ShowSave
        
        If Err = 0 Then
            sCurrentFilename = dlgFile.FileName
        End If
    End If
    
    ' Write text to file.
    WriteFileText hndFile, sCurrentFilename, txtMain.Text, bLineEndingLF
    bTextDirty = False
End Sub

' Opens a file using a dialog.
Public Sub OpenFileCommand()
    Dim sFileContents As String
    Dim fFileFlags As FileOpenConstants
    
    ' Check if we can overwrite the text field.
    If CheckForTextDirty Then
        ' Setup and open a Open dialog.
        fFileFlags = cdlOFNFileMustExist
        dlgFile.Flags = fFileFlags
        dlgFile.FileName = sCurrentFilename
        On Error Resume Next
        dlgFile.ShowOpen
        
        ' Get file contents if the dialog wasn't canceled.
        If Err = 0 Then
            sCurrentFilename = dlgFile.FileName
            ' TODO: Check the line ending of a file automatically.
            SetTextField GetFileText(hndFile, sCurrentFilename, bLineEndingLF)
            bTextDirty = False
        End If
    End If
End Sub

'*
'* Event Handlers
'*

' Application was loaded.
Private Sub Form_Load()
    bLineEndingLF = False
    bTextDirty = False
    sCurrentFilename = ""
    
    ResizeControls
    InitializeCommandBar
End Sub

' Window was resized.
Private Sub Form_Resize()
    ResizeControls
End Sub

' Event fired right before unloading the form and its contents.
Private Sub Form_Unload(Cancel As Integer)
    If Not CheckForTextDirty Then
        SaveFileCommand True
    End If
End Sub

' Event fired when the text changes.
Private Sub txtMain_Change()
    bTextDirty = True
End Sub

' Event fired when a menu item is clicked.
Private Sub cbrMain_MenuClick(ByVal Item As CommandbarLib.Item)
    Select Case Item.Key
    Case "New"
        NewFileCommand
    Case "Open"
        OpenFileCommand
    Case "Save"
        SaveFileCommand False
    Case "SaveAs"
        SaveFileCommand True
    Case "WordWrap"
        'If (txtMain.ScrollBars = vbBoth) Then
        '    txtMain.ScrollBars = vbVertical
        'Else
        '    txtMain.ScrollBars = vbBoth
        'End If
    Case "Exit"
        If CheckForTextDirty Then
            App.End
        End If
    End Select
End Sub
